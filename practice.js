// Multiples of 3 and 5
// Problem 1
// If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
//
// Find the sum of all the multiples of 3 or 5 below 1000.
function multiples(n){
  var sum = 0;
  for (var i = 0; i < n; i++) {
    if ((i % 3 === 0) || (i % 5 === 0)) {
      sum += i;
    }
  }
  console.log(sum);
  return sum;
}
multiples(1000)

// Even Fibonacci numbers
// Problem 2
// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
//
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//
// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

function sumOfEvenFib(n){
   var sum = 2;
   var fib = [];
   fib[0] = 1;
   fib[1] = 2;
   for (var i = 2; i < n; i++) {
     fib[i] = fib[i-1] + fib[i-2];
     if(fib[i] % 2 === 0){
       sum += fib[i];
      }
   }
   console.log(fib);
    console.log(sum);
   return fib;
 }
 sumOfEvenFib(9)

 // Largest prime factor
 // Problem 3
 // The prime factors of 13195 are 5, 7, 13 and 29.
 //
 // What is the largest prime factor of the number 600851475143 ?
